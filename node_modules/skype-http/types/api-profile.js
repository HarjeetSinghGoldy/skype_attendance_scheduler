"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const array_1 = require("kryo/types/array");
const document_1 = require("kryo/types/document");
const json_1 = require("kryo/types/json");
const null_1 = require("kryo/types/null");
const try_union_1 = require("kryo/types/try-union");
const ucs2_string_1 = require("kryo/types/ucs2-string");
const url_1 = require("./url");
function nullable(type) {
    return new try_union_1.TryUnionType({
        variants: [
            new null_1.NullType(),
            type,
        ],
    });
}
exports.$ApiProfile = new document_1.DocumentType({
    properties: {
        firstname: { type: new ucs2_string_1.Ucs2StringType({ maxLength: Infinity }) },
        lastname: { type: nullable(new ucs2_string_1.Ucs2StringType({ maxLength: Infinity })) },
        birthday: { type: new json_1.JsonType() },
        gender: { type: new json_1.JsonType() },
        language: { type: new json_1.JsonType() },
        country: { type: new json_1.JsonType() },
        province: { type: new json_1.JsonType() },
        city: { type: new json_1.JsonType() },
        homepage: { type: new json_1.JsonType() },
        about: { type: new json_1.JsonType() },
        emails: { type: new array_1.ArrayType({ itemType: new ucs2_string_1.Ucs2StringType({ maxLength: Infinity }), maxLength: Infinity }) },
        jobtitle: { type: new json_1.JsonType() },
        phoneMobile: { type: new json_1.JsonType() },
        phoneHome: { type: new json_1.JsonType() },
        phoneOffice: { type: new json_1.JsonType() },
        mood: { type: new json_1.JsonType() },
        richMood: { type: new json_1.JsonType() },
        avatarUrl: { type: nullable(url_1.$Url) },
        username: { type: new ucs2_string_1.Ucs2StringType({ maxLength: Infinity }) },
    },
    ignoreExtraKeys: true,
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zcmMvdHlwZXMvYXBpLXByb2ZpbGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFDQSw0Q0FBNkM7QUFDN0Msa0RBQW1EO0FBQ25ELDBDQUEyQztBQUMzQywwQ0FBMkM7QUFDM0Msb0RBQW9EO0FBQ3BELHdEQUF3RDtBQUN4RCwrQkFBa0M7QUFFbEMsa0JBQWtCLElBQXVDO0lBQ3ZELE1BQU0sQ0FBQyxJQUFJLHdCQUFZLENBQUM7UUFDdEIsUUFBUSxFQUFFO1lBQ1IsSUFBSSxlQUFRLEVBQUU7WUFDZCxJQUFJO1NBQ0w7S0FDRixDQUFDLENBQUM7QUFDTCxDQUFDO0FBaUZZLFFBQUEsV0FBVyxHQUE2QixJQUFJLHVCQUFZLENBQWE7SUFDaEYsVUFBVSxFQUFFO1FBQ1YsU0FBUyxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUksNEJBQWMsQ0FBQyxFQUFDLFNBQVMsRUFBRSxRQUFRLEVBQUMsQ0FBQyxFQUFDO1FBQzVELFFBQVEsRUFBRSxFQUFDLElBQUksRUFBRSxRQUFRLENBQUMsSUFBSSw0QkFBYyxDQUFDLEVBQUMsU0FBUyxFQUFFLFFBQVEsRUFBQyxDQUFDLENBQUMsRUFBQztRQUNyRSxRQUFRLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxlQUFRLEVBQUUsRUFBQztRQUNoQyxNQUFNLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxlQUFRLEVBQUUsRUFBQztRQUM5QixRQUFRLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxlQUFRLEVBQUUsRUFBQztRQUNoQyxPQUFPLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxlQUFRLEVBQUUsRUFBQztRQUMvQixRQUFRLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxlQUFRLEVBQUUsRUFBQztRQUNoQyxJQUFJLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxlQUFRLEVBQUUsRUFBQztRQUM1QixRQUFRLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxlQUFRLEVBQUUsRUFBQztRQUNoQyxLQUFLLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxlQUFRLEVBQUUsRUFBQztRQUM3QixNQUFNLEVBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxpQkFBUyxDQUFDLEVBQUMsUUFBUSxFQUFFLElBQUksNEJBQWMsQ0FBQyxFQUFDLFNBQVMsRUFBRSxRQUFRLEVBQUMsQ0FBQyxFQUFFLFNBQVMsRUFBRSxRQUFRLEVBQUMsQ0FBQyxFQUFDO1FBQ3pHLFFBQVEsRUFBRSxFQUFDLElBQUksRUFBRSxJQUFJLGVBQVEsRUFBRSxFQUFDO1FBQ2hDLFdBQVcsRUFBRSxFQUFDLElBQUksRUFBRSxJQUFJLGVBQVEsRUFBRSxFQUFDO1FBQ25DLFNBQVMsRUFBRSxFQUFDLElBQUksRUFBRSxJQUFJLGVBQVEsRUFBRSxFQUFDO1FBQ2pDLFdBQVcsRUFBRSxFQUFDLElBQUksRUFBRSxJQUFJLGVBQVEsRUFBRSxFQUFDO1FBQ25DLElBQUksRUFBRSxFQUFDLElBQUksRUFBRSxJQUFJLGVBQVEsRUFBRSxFQUFDO1FBQzVCLFFBQVEsRUFBRSxFQUFDLElBQUksRUFBRSxJQUFJLGVBQVEsRUFBRSxFQUFDO1FBQ2hDLFNBQVMsRUFBRSxFQUFDLElBQUksRUFBRSxRQUFRLENBQUMsVUFBSSxDQUFDLEVBQUM7UUFDakMsUUFBUSxFQUFFLEVBQUMsSUFBSSxFQUFFLElBQUksNEJBQWMsQ0FBQyxFQUFDLFNBQVMsRUFBRSxRQUFRLEVBQUMsQ0FBQyxFQUFDO0tBQzVEO0lBQ0QsZUFBZSxFQUFFLElBQUk7Q0FDdEIsQ0FBQyxDQUFDIiwiZmlsZSI6InR5cGVzL2FwaS1wcm9maWxlLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgVmVyc2lvbmVkVHlwZSB9IGZyb20gXCJrcnlvL3R5cGVzXCI7XG5pbXBvcnQgeyBBcnJheVR5cGUgfSBmcm9tIFwia3J5by90eXBlcy9hcnJheVwiO1xuaW1wb3J0IHsgRG9jdW1lbnRUeXBlIH0gZnJvbSBcImtyeW8vdHlwZXMvZG9jdW1lbnRcIjtcbmltcG9ydCB7IEpzb25UeXBlIH0gZnJvbSBcImtyeW8vdHlwZXMvanNvblwiO1xuaW1wb3J0IHsgTnVsbFR5cGUgfSBmcm9tIFwia3J5by90eXBlcy9udWxsXCI7XG5pbXBvcnQgeyBUcnlVbmlvblR5cGUgfSBmcm9tIFwia3J5by90eXBlcy90cnktdW5pb25cIjtcbmltcG9ydCB7IFVjczJTdHJpbmdUeXBlIH0gZnJvbSBcImtyeW8vdHlwZXMvdWNzMi1zdHJpbmdcIjtcbmltcG9ydCB7ICRVcmwsIFVybCB9IGZyb20gXCIuL3VybFwiO1xuXG5mdW5jdGlvbiBudWxsYWJsZSh0eXBlOiBWZXJzaW9uZWRUeXBlPGFueSwgYW55LCBhbnksIGFueT4pOiBWZXJzaW9uZWRUeXBlPGFueSwgYW55LCBhbnksIGFueT4ge1xuICByZXR1cm4gbmV3IFRyeVVuaW9uVHlwZSh7XG4gICAgdmFyaWFudHM6IFtcbiAgICAgIG5ldyBOdWxsVHlwZSgpLFxuICAgICAgdHlwZSxcbiAgICBdLFxuICB9KTtcbn1cblxuLyoqXG4gKiBSZXByZXNlbnRzIGEgcHJvZmlsZSByZXR1cm5lZCBieSB0aGUgZ2VuZXJhbCBBUEkgKGFwaS5za3lwZS5jb20pXG4gKlxuICogRXhhbXBsZXM6XG4gKiBgYGBcbiAqIHtcbiAqICAgXCJmaXJzdG5hbWVcIjogXCJCb2JcIixcbiAqICAgXCJsYXN0bmFtZVwiOiBudWxsLFxuICogICBcImJpcnRoZGF5XCI6IG51bGwsXG4gKiAgIFwiZ2VuZGVyXCI6IG51bGwsXG4gKiAgIFwibGFuZ3VhZ2VcIjogbnVsbCxcbiAqICAgXCJjb3VudHJ5XCI6IG51bGwsXG4gKiAgIFwicHJvdmluY2VcIjogbnVsbCxcbiAqICAgXCJjaXR5XCI6IG51bGwsXG4gKiAgIFwiaG9tZXBhZ2VcIjogbnVsbCxcbiAqICAgXCJhYm91dFwiOiBudWxsLFxuICogICBcImVtYWlsc1wiOiBbXG4gKiAgICAgXCJib2JAZXhhbXBsZS5jb21cIlxuICogICBdLFxuICogICBcImpvYnRpdGxlXCI6IG51bGwsXG4gKiAgIFwicGhvbmVNb2JpbGVcIjogbnVsbCxcbiAqICAgXCJwaG9uZUhvbWVcIjogbnVsbCxcbiAqICAgXCJwaG9uZU9mZmljZVwiOiBudWxsLFxuICogICBcIm1vb2RcIjogbnVsbCxcbiAqICAgXCJyaWNoTW9vZFwiOiBudWxsLFxuICogICBcImF2YXRhclVybFwiOiBcImh0dHBzOi8vYXZhdGFyLnNreXBlLmNvbS92MS9hdmF0YXJzL2JvYj9hdXRoX2tleT0tMjA3ODIxMTQwOFwiLFxuICogICBcInVzZXJuYW1lXCI6IFwiYm9iXCJcbiAqIH1cbiAqIGBgYFxuICpcbiAqIGBgYFxuICoge1xuICogICBcImZpcnN0bmFtZVwiOiBcIlBhdmVsXCIsXG4gKiAgIFwibGFzdG5hbWVcIjogXCJHZW9yZ2l5XCIsXG4gKiAgIFwiYmlydGhkYXlcIjogbnVsbCxcbiAqICAgXCJnZW5kZXJcIjogbnVsbCxcbiAqICAgXCJsYW5ndWFnZVwiOiBudWxsLFxuICogICBcImNvdW50cnlcIjogbnVsbCxcbiAqICAgXCJwcm92aW5jZVwiOiBudWxsLFxuICogICBcImNpdHlcIjogbnVsbCxcbiAqICAgXCJob21lcGFnZVwiOiBudWxsLFxuICogICBcImFib3V0XCI6IG51bGwsXG4gKiAgIFwiZW1haWxzXCI6IFtcbiAqICAgICBcInBhdmVsLmdlb3JnaXlAeWFuZGV4LnJ1XCJcbiAqICAgXSxcbiAqICAgXCJqb2J0aXRsZVwiOiBudWxsLFxuICogICBcInBob25lTW9iaWxlXCI6IG51bGwsXG4gKiAgIFwicGhvbmVIb21lXCI6IG51bGwsXG4gKiAgIFwicGhvbmVPZmZpY2VcIjogbnVsbCxcbiAqICAgXCJtb29kXCI6IG51bGwsXG4gKiAgIFwicmljaE1vb2RcIjogbnVsbCxcbiAqICAgXCJhdmF0YXJVcmxcIjogbnVsbCxcbiAqICAgXCJ1c2VybmFtZVwiOiBcImxpdmU6cGF2ZWwuZ2VvcmdpeVwiXG4gKiB9XG4gKiBgYGBcbiAqXG4gKi9cbmV4cG9ydCBpbnRlcmZhY2UgQXBpUHJvZmlsZSB7XG4gIGZpcnN0bmFtZTogc3RyaW5nO1xuICBsYXN0bmFtZTogc3RyaW5nIHwgbnVsbDtcbiAgYmlydGhkYXk6IGFueSB8IG51bGw7XG4gIGdlbmRlcjogYW55IHwgbnVsbDtcbiAgbGFuZ3VhZ2U6IGFueSB8IG51bGw7XG4gIGNvdW50cnk6IGFueSB8IG51bGw7XG4gIHByb3ZpbmNlOiBhbnkgfCBudWxsO1xuICBjaXR5OiBhbnkgfCBudWxsO1xuICBob21lcGFnZTogYW55IHwgbnVsbDtcbiAgYWJvdXQ6IGFueSB8IG51bGw7XG4gIGVtYWlsczogc3RyaW5nW107XG4gIGpvYnRpdGxlOiBhbnkgfCBudWxsO1xuICBwaG9uZU1vYmlsZTogYW55IHwgbnVsbDtcbiAgcGhvbmVIb21lOiBhbnkgfCBudWxsO1xuICBwaG9uZU9mZmljZTogYW55IHwgbnVsbDtcbiAgbW9vZDogYW55IHwgbnVsbDtcbiAgcmljaE1vb2Q6IGFueSB8IG51bGw7XG4gIGF2YXRhclVybDogVXJsO1xuICB1c2VybmFtZTogc3RyaW5nO1xufVxuXG5leHBvcnQgY29uc3QgJEFwaVByb2ZpbGU6IERvY3VtZW50VHlwZTxBcGlQcm9maWxlPiA9IG5ldyBEb2N1bWVudFR5cGU8QXBpUHJvZmlsZT4oe1xuICBwcm9wZXJ0aWVzOiB7XG4gICAgZmlyc3RuYW1lOiB7dHlwZTogbmV3IFVjczJTdHJpbmdUeXBlKHttYXhMZW5ndGg6IEluZmluaXR5fSl9LFxuICAgIGxhc3RuYW1lOiB7dHlwZTogbnVsbGFibGUobmV3IFVjczJTdHJpbmdUeXBlKHttYXhMZW5ndGg6IEluZmluaXR5fSkpfSxcbiAgICBiaXJ0aGRheToge3R5cGU6IG5ldyBKc29uVHlwZSgpfSxcbiAgICBnZW5kZXI6IHt0eXBlOiBuZXcgSnNvblR5cGUoKX0sXG4gICAgbGFuZ3VhZ2U6IHt0eXBlOiBuZXcgSnNvblR5cGUoKX0sXG4gICAgY291bnRyeToge3R5cGU6IG5ldyBKc29uVHlwZSgpfSxcbiAgICBwcm92aW5jZToge3R5cGU6IG5ldyBKc29uVHlwZSgpfSxcbiAgICBjaXR5OiB7dHlwZTogbmV3IEpzb25UeXBlKCl9LFxuICAgIGhvbWVwYWdlOiB7dHlwZTogbmV3IEpzb25UeXBlKCl9LFxuICAgIGFib3V0OiB7dHlwZTogbmV3IEpzb25UeXBlKCl9LFxuICAgIGVtYWlsczoge3R5cGU6IG5ldyBBcnJheVR5cGUoe2l0ZW1UeXBlOiBuZXcgVWNzMlN0cmluZ1R5cGUoe21heExlbmd0aDogSW5maW5pdHl9KSwgbWF4TGVuZ3RoOiBJbmZpbml0eX0pfSxcbiAgICBqb2J0aXRsZToge3R5cGU6IG5ldyBKc29uVHlwZSgpfSxcbiAgICBwaG9uZU1vYmlsZToge3R5cGU6IG5ldyBKc29uVHlwZSgpfSxcbiAgICBwaG9uZUhvbWU6IHt0eXBlOiBuZXcgSnNvblR5cGUoKX0sXG4gICAgcGhvbmVPZmZpY2U6IHt0eXBlOiBuZXcgSnNvblR5cGUoKX0sXG4gICAgbW9vZDoge3R5cGU6IG5ldyBKc29uVHlwZSgpfSxcbiAgICByaWNoTW9vZDoge3R5cGU6IG5ldyBKc29uVHlwZSgpfSxcbiAgICBhdmF0YXJVcmw6IHt0eXBlOiBudWxsYWJsZSgkVXJsKX0sXG4gICAgdXNlcm5hbWU6IHt0eXBlOiBuZXcgVWNzMlN0cmluZ1R5cGUoe21heExlbmd0aDogSW5maW5pdHl9KX0sXG4gIH0sXG4gIGlnbm9yZUV4dHJhS2V5czogdHJ1ZSxcbn0pO1xuIl0sInNvdXJjZVJvb3QiOiIuLiJ9
