import { VersionedType } from "../types";
export declare type Name = "boolean";
export declare const name: Name;
export declare type Diff = boolean;
export declare class BooleanType implements VersionedType<boolean, boolean, boolean, Diff> {
    readonly name: Name;
    toJSON(): undefined;
    readTrustedJson(input: boolean): boolean;
    readJson(input: any): boolean;
    writeJson(val: boolean): boolean;
    testError(val: boolean): Error | undefined;
    test(val: boolean): val is boolean;
    equals(val1: boolean, val2: boolean): boolean;
    clone(val: boolean): boolean;
    /**
     * @param oldVal
     * @param newVal
     * @returns `true` if there is a difference, `undefined` otherwise
     */
    diff(oldVal: boolean, newVal: boolean): Diff | undefined;
    patch(oldVal: boolean, diff: Diff | undefined): boolean;
    reverseDiff(diff: Diff | undefined): Diff | undefined;
    squash(diff1: Diff | undefined, diff2: Diff | undefined): Diff | undefined;
}
