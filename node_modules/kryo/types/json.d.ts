import { VersionedType } from "../types";
export declare type Name = "json";
export declare const name: Name;
export declare namespace json {
    type Input = any;
    type Output = any;
    type Type = undefined;
}
export declare type Diff = any;
export declare class JsonType implements VersionedType<any, json.Input, json.Output, Diff> {
    readonly name: Name;
    constructor();
    toJSON(): json.Type;
    readTrustedJson(input: json.Output): any;
    readJson(input: any): any;
    writeJson(val: any): json.Output;
    testError(val: any): Error | undefined;
    test(val: any): boolean;
    equals(val1: any, val2: any): boolean;
    clone(val: any): any;
    diff(oldVal: any, newVal: any): Diff | undefined;
    patch(oldVal: any, diff: Diff | undefined): any;
    reverseDiff(diff: Diff | undefined): Diff | undefined;
    squash(diff1: Diff | undefined, diff2: Diff | undefined): Diff | undefined;
}
