"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const invalid_type_1 = require("../errors/invalid-type");
const date_1 = require("../types/date");
function write(type, value) {
    return new Date(value.getTime());
}
function read(type, input) {
    let result;
    if (!(input instanceof Date)) {
        throw invalid_type_1.createInvalidTypeError("Date", input);
    }
    result = new Date(input.getTime());
    const error = type.testError(result);
    if (error !== undefined) {
        throw error;
    }
    return result;
}
function readTrusted(type, input) {
    return new Date(input.getTime());
}
exports.SERIALIZER = {
    typeName: date_1.name,
    write,
    read,
    readTrusted,
};
function register(serializer) {
    serializer.register(exports.SERIALIZER);
}
exports.register = register;

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImJzb24vZGF0ZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLHlEQUFnRTtBQUVoRSx3Q0FBMkQ7QUFFM0QsZUFBZSxJQUFjLEVBQUUsS0FBVztJQUN4QyxNQUFNLENBQUMsSUFBSSxJQUFJLENBQUMsS0FBSyxDQUFDLE9BQU8sRUFBRSxDQUFDLENBQUM7QUFDbkMsQ0FBQztBQUVELGNBQWMsSUFBYyxFQUFFLEtBQVc7SUFDdkMsSUFBSSxNQUFZLENBQUM7SUFDakIsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLEtBQUssWUFBWSxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFDN0IsTUFBTSxxQ0FBc0IsQ0FBQyxNQUFNLEVBQUUsS0FBSyxDQUFDLENBQUM7SUFDOUMsQ0FBQztJQUNELE1BQU0sR0FBRyxJQUFJLElBQUksQ0FBQyxLQUFLLENBQUMsT0FBTyxFQUFFLENBQUMsQ0FBQztJQUNuQyxNQUFNLEtBQUssR0FBc0IsSUFBSSxDQUFDLFNBQVMsQ0FBQyxNQUFNLENBQUMsQ0FBQztJQUN4RCxFQUFFLENBQUMsQ0FBQyxLQUFLLEtBQUssU0FBUyxDQUFDLENBQUMsQ0FBQztRQUN4QixNQUFNLEtBQUssQ0FBQztJQUNkLENBQUM7SUFDRCxNQUFNLENBQUMsTUFBTSxDQUFDO0FBQ2hCLENBQUM7QUFFRCxxQkFBcUIsSUFBYyxFQUFFLEtBQVc7SUFDOUMsTUFBTSxDQUFDLElBQUksSUFBSSxDQUFDLEtBQUssQ0FBQyxPQUFPLEVBQUUsQ0FBQyxDQUFDO0FBQ25DLENBQUM7QUFFWSxRQUFBLFVBQVUsR0FBd0I7SUFDN0MsUUFBUSxFQUFSLFdBQVE7SUFDUixLQUFLO0lBQ0wsSUFBSTtJQUNKLFdBQVc7Q0FDWixDQUFDO0FBRUYsa0JBQXlCLFVBQXNCO0lBQzdDLFVBQVUsQ0FBQyxRQUFRLENBQUMsa0JBQVUsQ0FBQyxDQUFDO0FBQ2xDLENBQUM7QUFGRCw0QkFFQyIsImZpbGUiOiJic29uL2RhdGUuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjcmVhdGVJbnZhbGlkVHlwZUVycm9yIH0gZnJvbSBcIi4uL2Vycm9ycy9pbnZhbGlkLXR5cGVcIjtcbmltcG9ydCB7IFNlcmlhbGl6ZXIsIFR5cGVTZXJpYWxpemVyIH0gZnJvbSBcIi4uL3R5cGVzXCI7XG5pbXBvcnQgeyBEYXRlVHlwZSwgbmFtZSBhcyB0eXBlTmFtZSB9IGZyb20gXCIuLi90eXBlcy9kYXRlXCI7XG5cbmZ1bmN0aW9uIHdyaXRlKHR5cGU6IERhdGVUeXBlLCB2YWx1ZTogRGF0ZSk6IERhdGUge1xuICByZXR1cm4gbmV3IERhdGUodmFsdWUuZ2V0VGltZSgpKTtcbn1cblxuZnVuY3Rpb24gcmVhZCh0eXBlOiBEYXRlVHlwZSwgaW5wdXQ6IERhdGUpOiBEYXRlIHtcbiAgbGV0IHJlc3VsdDogRGF0ZTtcbiAgaWYgKCEoaW5wdXQgaW5zdGFuY2VvZiBEYXRlKSkge1xuICAgIHRocm93IGNyZWF0ZUludmFsaWRUeXBlRXJyb3IoXCJEYXRlXCIsIGlucHV0KTtcbiAgfVxuICByZXN1bHQgPSBuZXcgRGF0ZShpbnB1dC5nZXRUaW1lKCkpO1xuICBjb25zdCBlcnJvcjogRXJyb3IgfCB1bmRlZmluZWQgPSB0eXBlLnRlc3RFcnJvcihyZXN1bHQpO1xuICBpZiAoZXJyb3IgIT09IHVuZGVmaW5lZCkge1xuICAgIHRocm93IGVycm9yO1xuICB9XG4gIHJldHVybiByZXN1bHQ7XG59XG5cbmZ1bmN0aW9uIHJlYWRUcnVzdGVkKHR5cGU6IERhdGVUeXBlLCBpbnB1dDogRGF0ZSk6IERhdGUge1xuICByZXR1cm4gbmV3IERhdGUoaW5wdXQuZ2V0VGltZSgpKTtcbn1cblxuZXhwb3J0IGNvbnN0IFNFUklBTElaRVI6IFR5cGVTZXJpYWxpemVyPGFueT4gPSB7XG4gIHR5cGVOYW1lLFxuICB3cml0ZSxcbiAgcmVhZCxcbiAgcmVhZFRydXN0ZWQsXG59O1xuXG5leHBvcnQgZnVuY3Rpb24gcmVnaXN0ZXIoc2VyaWFsaXplcjogU2VyaWFsaXplcik6IHZvaWQge1xuICBzZXJpYWxpemVyLnJlZ2lzdGVyKFNFUklBTElaRVIpO1xufVxuIl0sInNvdXJjZVJvb3QiOiIuLiJ9
