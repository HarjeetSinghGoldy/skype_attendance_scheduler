"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const incident_1 = require("incident");
const invalid_type_1 = require("../errors/invalid-type");
const simple_enum_1 = require("../types/simple-enum");
function write(type, value) {
    return type.valueToOutputName[value];
}
function read(type, input) {
    if (typeof input !== "string") {
        throw invalid_type_1.createInvalidTypeError("string", input);
    }
    if (!type.outputNameToValue.hasOwnProperty(input)) {
        throw incident_1.Incident("Unknown enum variant name", input);
    }
    return type.outputNameToValue[input];
}
function readTrusted(type, input) {
    return type.outputNameToValue[input];
}
exports.SERIALIZER = {
    typeName: simple_enum_1.name,
    write,
    read,
    readTrusted,
};
function register(serializer) {
    serializer.register(exports.SERIALIZER);
}
exports.register = register;

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImJzb24vc2ltcGxlLWVudW0udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSx1Q0FBb0M7QUFDcEMseURBQWdFO0FBRWhFLHNEQUF3RTtBQUV4RSxlQUFpQyxJQUF1QixFQUFFLEtBQVE7SUFDaEUsTUFBTSxDQUFDLElBQUksQ0FBQyxpQkFBaUIsQ0FBQyxLQUFlLENBQUMsQ0FBQztBQUNqRCxDQUFDO0FBRUQsY0FBZ0MsSUFBdUIsRUFBRSxLQUFhO0lBQ3BFLEVBQUUsQ0FBQyxDQUFDLE9BQU8sS0FBSyxLQUFLLFFBQVEsQ0FBQyxDQUFDLENBQUM7UUFDOUIsTUFBTSxxQ0FBc0IsQ0FBQyxRQUFRLEVBQUUsS0FBSyxDQUFDLENBQUM7SUFDaEQsQ0FBQztJQUNELEVBQUUsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLGlCQUFpQixDQUFDLGNBQWMsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFDbEQsTUFBTSxtQkFBUSxDQUFDLDJCQUEyQixFQUFFLEtBQUssQ0FBQyxDQUFDO0lBQ3JELENBQUM7SUFDRCxNQUFNLENBQUMsSUFBSSxDQUFDLGlCQUFpQixDQUFDLEtBQUssQ0FBTSxDQUFDO0FBQzVDLENBQUM7QUFFRCxxQkFBdUMsSUFBdUIsRUFBRSxLQUFhO0lBQzNFLE1BQU0sQ0FBQyxJQUFJLENBQUMsaUJBQWlCLENBQUMsS0FBSyxDQUFNLENBQUM7QUFDNUMsQ0FBQztBQUVZLFFBQUEsVUFBVSxHQUF3QjtJQUM3QyxRQUFRLEVBQVIsa0JBQVE7SUFDUixLQUFLO0lBQ0wsSUFBSTtJQUNKLFdBQVc7Q0FDWixDQUFDO0FBRUYsa0JBQXlCLFVBQXNCO0lBQzdDLFVBQVUsQ0FBQyxRQUFRLENBQUMsa0JBQVUsQ0FBQyxDQUFDO0FBQ2xDLENBQUM7QUFGRCw0QkFFQyIsImZpbGUiOiJic29uL3NpbXBsZS1lbnVtLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5jaWRlbnQgfSBmcm9tIFwiaW5jaWRlbnRcIjtcbmltcG9ydCB7IGNyZWF0ZUludmFsaWRUeXBlRXJyb3IgfSBmcm9tIFwiLi4vZXJyb3JzL2ludmFsaWQtdHlwZVwiO1xuaW1wb3J0IHsgU2VyaWFsaXplciwgVHlwZVNlcmlhbGl6ZXIgfSBmcm9tIFwiLi4vdHlwZXNcIjtcbmltcG9ydCB7IG5hbWUgYXMgdHlwZU5hbWUsIFNpbXBsZUVudW1UeXBlIH0gZnJvbSBcIi4uL3R5cGVzL3NpbXBsZS1lbnVtXCI7XG5cbmZ1bmN0aW9uIHdyaXRlPEUgZXh0ZW5kcyBudW1iZXI+KHR5cGU6IFNpbXBsZUVudW1UeXBlPEU+LCB2YWx1ZTogRSk6IHN0cmluZyB7XG4gIHJldHVybiB0eXBlLnZhbHVlVG9PdXRwdXROYW1lW3ZhbHVlIGFzIG51bWJlcl07XG59XG5cbmZ1bmN0aW9uIHJlYWQ8RSBleHRlbmRzIG51bWJlcj4odHlwZTogU2ltcGxlRW51bVR5cGU8RT4sIGlucHV0OiBzdHJpbmcpOiBFIHtcbiAgaWYgKHR5cGVvZiBpbnB1dCAhPT0gXCJzdHJpbmdcIikge1xuICAgIHRocm93IGNyZWF0ZUludmFsaWRUeXBlRXJyb3IoXCJzdHJpbmdcIiwgaW5wdXQpO1xuICB9XG4gIGlmICghdHlwZS5vdXRwdXROYW1lVG9WYWx1ZS5oYXNPd25Qcm9wZXJ0eShpbnB1dCkpIHtcbiAgICB0aHJvdyBJbmNpZGVudChcIlVua25vd24gZW51bSB2YXJpYW50IG5hbWVcIiwgaW5wdXQpO1xuICB9XG4gIHJldHVybiB0eXBlLm91dHB1dE5hbWVUb1ZhbHVlW2lucHV0XSBhcyBFO1xufVxuXG5mdW5jdGlvbiByZWFkVHJ1c3RlZDxFIGV4dGVuZHMgbnVtYmVyPih0eXBlOiBTaW1wbGVFbnVtVHlwZTxFPiwgaW5wdXQ6IHN0cmluZyk6IEUge1xuICByZXR1cm4gdHlwZS5vdXRwdXROYW1lVG9WYWx1ZVtpbnB1dF0gYXMgRTtcbn1cblxuZXhwb3J0IGNvbnN0IFNFUklBTElaRVI6IFR5cGVTZXJpYWxpemVyPGFueT4gPSB7XG4gIHR5cGVOYW1lLFxuICB3cml0ZSxcbiAgcmVhZCxcbiAgcmVhZFRydXN0ZWQsXG59O1xuXG5leHBvcnQgZnVuY3Rpb24gcmVnaXN0ZXIoc2VyaWFsaXplcjogU2VyaWFsaXplcik6IHZvaWQge1xuICBzZXJpYWxpemVyLnJlZ2lzdGVyKFNFUklBTElaRVIpO1xufVxuIl0sInNvdXJjZVJvb3QiOiIuLiJ9
