import { createInvalidTypeError } from "../errors/invalid-type";
import { name as typeName } from "../types/integer";
function write(type, value) {
    return value;
}
function read(type, input) {
    let val;
    if (typeof input !== "number") {
        throw createInvalidTypeError("number", input);
    }
    val = input;
    const err = type.testError(val);
    if (err !== undefined) {
        throw err;
    }
    return val;
}
function readTrusted(type, input) {
    return input;
}
export const SERIALIZER = {
    typeName,
    write,
    read,
    readTrusted,
};
export function register(serializer) {
    serializer.register(SERIALIZER);
}
