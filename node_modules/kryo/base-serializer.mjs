import { Incident } from "incident";
export class BaseSerializer {
    constructor(format) {
        this.format = format;
        this.types = new Map();
    }
    register(serializer) {
        this.types.set(serializer.typeName, serializer);
    }
    write(type, value) {
        return this.getTypeSerializer(type.name).write(type, value);
    }
    read(type, input) {
        return this.getTypeSerializer(type.name).read(type, input);
    }
    readTrusted(type, input) {
        return this.getTypeSerializer(type.name).readTrusted(type, input);
    }
    getTypeSerializer(name) {
        const result = this.types.get(name);
        if (result === undefined) {
            throw new Incident("UnknownType", { name, types: new Map([...this.types.entries()]) });
        }
        return result;
    }
}
