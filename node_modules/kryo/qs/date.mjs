import { createInvalidTypeError } from "../errors/invalid-type";
import { name as typeName } from "../types/date";
function write(type, value) {
    return value.toISOString();
}
function read(type, input) {
    let result;
    if (typeof input !== "string") {
        throw createInvalidTypeError("string", input);
    }
    result = new Date(input);
    const error = type.testError(result);
    if (error !== undefined) {
        throw error;
    }
    return result;
}
function readTrusted(type, input) {
    return new Date(input);
}
export const SERIALIZER = {
    typeName,
    write,
    read,
    readTrusted,
};
export function register(serializer) {
    serializer.register(SERIALIZER);
}
