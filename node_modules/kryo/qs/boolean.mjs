import { createInvalidTypeError } from "../errors/invalid-type";
import { name as typeName } from "../types/boolean";
function write(type, value) {
    return value ? "true" : "false";
}
function read(type, input) {
    if (!(input === "true" || input === "false")) {
        throw createInvalidTypeError("\"true\" | \"false\"", input);
    }
    return input === "true";
}
function readTrusted(type, input) {
    return input === "true";
}
export const SERIALIZER = {
    typeName,
    write,
    read,
    readTrusted,
};
export function register(serializer) {
    serializer.register(SERIALIZER);
}
