"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const invalid_type_1 = require("../errors/invalid-type");
const buffer_1 = require("../types/buffer");
function write(type, val) {
    const result = new Array(val.length);
    const len = val.length;
    for (let i = 0; i < len; i++) {
        result[i] = (val[i] < 16 ? "0" : "") + val[i].toString(16);
    }
    return result.join("");
}
function read(type, input) {
    let result;
    if (typeof input !== "string") {
        throw invalid_type_1.createInvalidTypeError("string", input);
    }
    else if (!/^(?:[0-9a-f]{2})*$/.test(input)) {
        throw invalid_type_1.createInvalidTypeError("lowerCaseHexEvenLengthString", input);
    }
    const len = input.length / 2;
    result = new Uint8Array(len);
    for (let i = 0; i < len; i++) {
        result[i] = parseInt(input.substr(2 * i, 2), 16);
    }
    const error = type.testError(result);
    if (error !== undefined) {
        throw error;
    }
    return result;
}
function readTrusted(type, input) {
    const len = input.length / 2;
    const result = new Uint8Array(len);
    for (let i = 0; i < len; i++) {
        result[i] = parseInt(input.substr(2 * i, 2), 16);
    }
    return result;
}
exports.readTrusted = readTrusted;
exports.SERIALIZER = {
    typeName: buffer_1.name,
    write,
    read,
    readTrusted,
};
function register(serializer) {
    serializer.register(exports.SERIALIZER);
}
exports.register = register;

//# sourceMappingURL=data:application/json;charset=utf8;base64,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QkFBeUIsVUFBc0I7SUFDN0MsVUFBVSxDQUFDLFFBQVEsQ0FBQyxrQkFBVSxDQUFDLENBQUM7QUFDbEMsQ0FBQztBQUZELDRCQUVDIiwiZmlsZSI6InFzL2J1ZmZlci5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGNyZWF0ZUludmFsaWRUeXBlRXJyb3IgfSBmcm9tIFwiLi4vZXJyb3JzL2ludmFsaWQtdHlwZVwiO1xuaW1wb3J0IHsgU2VyaWFsaXplciwgVHlwZVNlcmlhbGl6ZXIgfSBmcm9tIFwiLi4vdHlwZXNcIjtcbmltcG9ydCB7IEJ1ZmZlclR5cGUsIG5hbWUgYXMgdHlwZU5hbWUgfSBmcm9tIFwiLi4vdHlwZXMvYnVmZmVyXCI7XG5cbmZ1bmN0aW9uIHdyaXRlKHR5cGU6IEJ1ZmZlclR5cGUsIHZhbDogVWludDhBcnJheSk6IHN0cmluZyB7XG4gIGNvbnN0IHJlc3VsdDogc3RyaW5nW10gPSBuZXcgQXJyYXkodmFsLmxlbmd0aCk7XG4gIGNvbnN0IGxlbjogbnVtYmVyID0gdmFsLmxlbmd0aDtcbiAgZm9yIChsZXQgaTogbnVtYmVyID0gMDsgaSA8IGxlbjsgaSsrKSB7XG4gICAgcmVzdWx0W2ldID0gKHZhbFtpXSA8IDE2ID8gXCIwXCIgOiBcIlwiKSArIHZhbFtpXS50b1N0cmluZygxNik7XG4gIH1cbiAgcmV0dXJuIHJlc3VsdC5qb2luKFwiXCIpO1xufVxuXG5mdW5jdGlvbiByZWFkKHR5cGU6IEJ1ZmZlclR5cGUsIGlucHV0OiBzdHJpbmcpOiBVaW50OEFycmF5IHtcbiAgbGV0IHJlc3VsdDogVWludDhBcnJheTtcbiAgaWYgKHR5cGVvZiBpbnB1dCAhPT0gXCJzdHJpbmdcIikge1xuICAgIHRocm93IGNyZWF0ZUludmFsaWRUeXBlRXJyb3IoXCJzdHJpbmdcIiwgaW5wdXQpO1xuICB9IGVsc2UgaWYgKCEvXig/OlswLTlhLWZdezJ9KSokLy50ZXN0KGlucHV0KSkge1xuICAgIHRocm93IGNyZWF0ZUludmFsaWRUeXBlRXJyb3IoXCJsb3dlckNhc2VIZXhFdmVuTGVuZ3RoU3RyaW5nXCIsIGlucHV0KTtcbiAgfVxuICBjb25zdCBsZW46IG51bWJlciA9IGlucHV0Lmxlbmd0aCAvIDI7XG4gIHJlc3VsdCA9IG5ldyBVaW50OEFycmF5KGxlbik7XG4gIGZvciAobGV0IGk6IG51bWJlciA9IDA7IGkgPCBsZW47IGkrKykge1xuICAgIHJlc3VsdFtpXSA9IHBhcnNlSW50KGlucHV0LnN1YnN0cigyICogaSwgMiksIDE2KTtcbiAgfVxuICBjb25zdCBlcnJvcjogRXJyb3IgfCB1bmRlZmluZWQgPSB0eXBlLnRlc3RFcnJvcihyZXN1bHQpO1xuICBpZiAoZXJyb3IgIT09IHVuZGVmaW5lZCkge1xuICAgIHRocm93IGVycm9yO1xuICB9XG4gIHJldHVybiByZXN1bHQ7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiByZWFkVHJ1c3RlZCh0eXBlOiBCdWZmZXJUeXBlLCBpbnB1dDogc3RyaW5nKTogVWludDhBcnJheSB7XG4gIGNvbnN0IGxlbjogbnVtYmVyID0gaW5wdXQubGVuZ3RoIC8gMjtcbiAgY29uc3QgcmVzdWx0OiBVaW50OEFycmF5ID0gbmV3IFVpbnQ4QXJyYXkobGVuKTtcbiAgZm9yIChsZXQgaTogbnVtYmVyID0gMDsgaSA8IGxlbjsgaSsrKSB7XG4gICAgcmVzdWx0W2ldID0gcGFyc2VJbnQoaW5wdXQuc3Vic3RyKDIgKiBpLCAyKSwgMTYpO1xuICB9XG4gIHJldHVybiByZXN1bHQ7XG59XG5cbmV4cG9ydCBjb25zdCBTRVJJQUxJWkVSOiBUeXBlU2VyaWFsaXplcjxhbnk+ID0ge1xuICB0eXBlTmFtZSxcbiAgd3JpdGUsXG4gIHJlYWQsXG4gIHJlYWRUcnVzdGVkLFxufTtcblxuZXhwb3J0IGZ1bmN0aW9uIHJlZ2lzdGVyKHNlcmlhbGl6ZXI6IFNlcmlhbGl6ZXIpOiB2b2lkIHtcbiAgc2VyaWFsaXplci5yZWdpc3RlcihTRVJJQUxJWkVSKTtcbn1cbiJdLCJzb3VyY2VSb290IjoiLi4ifQ==
